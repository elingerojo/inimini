"""
Django settings for sixerr project.

Generated by 'django-admin startproject' using Django 1.9.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['DJANGO_SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = os.environ['DJANGO_DEBUG'] == 'True' # Coverts to Boolean

# If you set the SECURE_SSL_REDIRECT setting to True, SecurityMiddleware will permanently (HTTP 301) redirect all HTTP connections to HTTPS.
# SECURE_SSL_REDIRECT = os.environ['SECURE_SSL_REDIRECT'] == 'True' # Coverts to Boolean

ALLOWED_HOSTS = [] # Default to empty for running locally
# Override ALLOWED_HOSTS if environment variable present (in Gitlab and Heroku)
from ast import literal_eval
if 'DJANGO_ALLOWED_HOSTS' in os.environ:
    # Convert string with comma separated hosts to python list
    ALLOWED_HOSTS = [literal_eval(e.strip()) for e in os.environ["DJANGO_ALLOWED_HOSTS"].split(',')]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'sixerrapp',
    'social_django',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
]

ROOT_URLCONF = 'sixerr.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'sixerr.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Los_Angeles'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

# To serve static files on Heroku
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

AUTHENTICATION_BACKENDS = (
    'social_core.backends.facebook.FacebookOAuth2',
#    'social_core.backends.twitter.TwitterOAuth',
    'django.contrib.auth.backends.ModelBackend'
)

LOGIN_REDIRECT_URL = '/'

SOCIAL_AUTH_FACEBOOK_KEY = os.environ['SOCIAL_AUTH_FACEBOOK_KEY']  # App ID
SOCIAL_AUTH_FACEBOOK_SECRET = os.environ['SOCIAL_AUTH_FACEBOOK_SECRET']  # App Secret
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
  'fields': 'name, email'
}

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    'sixerrapp.social_auth_pipeline.save_avatar',  # <--- set the path to the function
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

# Roast.gg social links
FACEBOOK_LINK = 'https://www.facebook.com/Roastgg-311446565995273/'
TWITTER_LINK = 'https://twitter.com/roast_gg'

# Replace database settings to use postgresql on Heroku
import dj_database_url
db_from_env = dj_database_url.config()
DATABASES['default'].update(db_from_env)

# staging, production, etc.
RUNNING_ENVIRONMENT = os.environ['RUNNING_ENVIRONMENT']

# Setup upload directory for Gig model
# MEDIA_UPLOADER_SERVER_DIR = os.environ['MEDIA_UPLOADER_SERVER_DIR']
MEDIA_UPLOADER_SERVER_DIR = 'https://pulldrop.com/sixerr/'
MEDIA_UPLOADER_ENDPOINT_DIR = MEDIA_UPLOADER_SERVER_DIR + RUNNING_ENVIRONMENT + '/'
# MEDIA_UPLOADER_ENDPOINT_SCRIPT = os.environ['MEDIA_UPLOADER_ENDPOINT_SCRIPT']
MEDIA_UPLOADER_ENDPOINT_SCRIPT = 'upstore.php'
MEDIA_UPLOADER_ENDPOINT = MEDIA_UPLOADER_ENDPOINT_DIR + MEDIA_UPLOADER_ENDPOINT_SCRIPT
MEDIA_ROOT = MEDIA_UPLOADER_ENDPOINT_DIR + 'files/'
# Placeholder image path
MEDIA_PLACEHOLDER_IMAGE_PATH = '8a285a48-13a4-4886-9134-2cb21c653209/placeholder-images.jpg'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = 'mail.gandi.net'
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_HOST_USER = 'notifications@roast.gg'
EMAIL_HOST_PASSWORD = os.environ['EMAIL_HOST_PASSWORD']
EMAIL_ADMIN_EMAIL = os.environ['EMAIL_ADMIN_EMAIL']

USER_EMAIL_PLACEHOLDER = "replace.me@roast.gg"

RECAPTCHA_KEY = os.environ['RECAPTCHA_KEY']
RECAPTCHA_SECRET_KEY = os.environ['RECAPTCHA_SECRET_KEY']

GA_TRACKING_ID = os.environ['GA_TRACKING_ID']

# ex.; http://staging.roast.gg
HOST_URL = os.environ['HOST_URL']
